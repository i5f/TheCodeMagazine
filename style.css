/* universal selector, specified elements will be applied to all the elements */
* {
  margin: 0;
  padding: 0;
}

/* not all of the styling options get inherited like border-top in the following, mostly text-related ones */
body {
  font-family: sans-serif;
  color: #444;
  border-top: #1098ad 10px solid;
  position: relative;
}

.container {
  width: 700px;
  margin: 0 auto;
}

.main-header {
  background-color: #f7f7f7;
  /* padding: 20px;
  padding-left: 40px;
  padding-right: 40px; */
  padding: 20px 40px; /* first is vertical second is horizontal */
  margin-bottom: 60px;
  height: 80px;
}

/* no longer needed... */
/* so this is one way to combine selectors */
/* h1, h2, h3, h4, p, li {
  font-family: sans-serif;
  color: #444;
} */

h1,
h2,
h3 {
  color: #1098ad;
}

h1 {
  font-size: 26px;
  text-transform: uppercase;
  font-style: italic;
  color: #1098ad;
}

h2 {
  font-size: 40px;
  margin-bottom: 30px;
  position: relative;
}

h3 {
  font-size: 30px;
  margin-bottom: 20px;
  margin-top: 40px;
}

h4 {
  font-size: 20px;
  text-transform: uppercase;
  text-align: center;
}

nav {
  font-size: 18px;
}

article {
  margin-bottom: 60px;
}

p {
  font-size: 22px;
  line-height: 1.5;
  margin-bottom: 50px;
}

aside {
  border-top: #1098ad 5px solid;
  border-bottom: #1098ad 5px solid;
  background-color: #f7f7f7;
  padding: 50px 0;
  width: 500px;
}

ul,
ol {
  margin-left: 50px;
  margin-bottom: 20px;
}

li {
  font-size: 20px;
  margin-bottom: 10px;
}

li:last-child {
  margin-bottom: 0;
}

/***** styling the html elements in the following two way i.e. by descendant selectors, is not a good idea because they are encoding the html structure into the css file *****/
/* this is called the descendant selector and this is another way to select html elements */
/* footer p {
  font-size: 16px;
}

this is called nested descendant selector, self explanatory, it selects the p element inside the header inside the article, i.e. the p that starts with 'Posted by Laura Jones on...' */
/* article header p {
  font-style: italic;
} */

/* this is called id selector and only one html element can have a specific id selector, basically naming the element uniquely, and almost never used */
#author {
  font-style: italic;
  font-size: 18px;
}

#copyright {
  font-size: 16px;
}

/* this is called class selector, and multiple html elements can have the same class selector(s), basically an adjective for the html element(s), and almost used everytime */
.related-author {
  font-size: 18px;
  font-weight: bold;
}

.related-posts {
  list-style: none;
}

.post-header {
  margin-bottom: 40px;
}

.post-img {
  width: 100%;
  height: auto;
}

nav a:link {
  margin-right: 30px;
  margin-top: 10px;
  display: inline-block;
}

nav a:link:last-child {
  margin-right: 0;
}

/* absolutely positioned button */
button {
  font-size: 22px;
  padding: 20px;
  cursor: pointer;

  position: absolute;
  bottom: 50px;
  right: 50px;
}

/* this is styling pseudo-elements, and we are doing basically the same thing where we do with the pseudo-classes, just using double colon */
h1::first-letter {
  font-style: normal;
  margin-right: 5px;
}

/* + is the adjacent sibling selector here, which means it will only select the <p> elements that are sibling to the <h3> elements, and then the :: which is, again, pseudo-element selector will select the first line */
h3 + p::first-line {
  /* color: red; */
}

h2::after {
  content: "TOP";
  color: #444;
  background-color: #ffe70e;
  font-size: 16px;
  font-weight: bold;
  display: inline-block;
  padding: 5px 10px;
  position: absolute;
  top: -10px;
  right: -25px;
}

/* this is called pseudo-class and we can style the first elements like this */
li:first-child {
  font-weight: bold;
}

/* and last childs like this */
li:last-child {
  font-style: italic;
}

li:nth-child(2) {
  /* and nth childs like this, or even and odd elements with basically writing even or odd instead of 2 */
}

/* this doesn't work as expected, one might expect this to select the first child of p of the article element but actually article's first child is header
article p:first-child {
  color: red;
} */

/* but the following would work as expected since the article's last child is a p element
article p:last-child {
  color: red;
} */

/* styling links is also done with pseudo-classes */
a:link {
  color: #1098ad;
  text-decoration: none;
}

a:visited {
  color: #1098ad;
}

a:hover {
  color: orangered;
  font-weight: bold;
  text-decoration: underline orangered;
}

a:active {
  background-color: black;
  font-style: italic;
}
